unit UDM;

interface

uses
  System.SysUtils, System.Classes, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Error, FireDAC.UI.Intf, FireDAC.Phys.Intf, FireDAC.Stan.Def,
  FireDAC.Stan.Pool, FireDAC.Stan.Async, FireDAC.Phys, FireDAC.Phys.SQLite,
  FireDAC.Phys.SQLiteDef, FireDAC.Stan.ExprFuncs,
  FireDAC.Phys.SQLiteWrapper.Stat, FireDAC.FMXUI.Wait, Data.DB,
  FireDAC.Comp.Client, FireDAC.Stan.Param, FireDAC.DatS, FireDAC.DApt.Intf,
  FireDAC.DApt, FireDAC.Comp.DataSet, IOUtils;

type
  TDM = class(TDataModule)
    FDConnection1: TFDConnection;
    FDQPessoa: TFDQuery;
    FDQPessoaid: TFDAutoIncField;
    FDQPessoanome: TStringField;
    FDQPessoacpf: TStringField;
    FDQPessoacelular: TStringField;
    FDQPessoacep: TStringField;
    FDQPessoaendereco: TStringField;
    FDQPessoacidade: TStringField;
    FDQPessoauf: TStringField;
    FDQPessoabairro: TStringField;
    FDQPessoaemail: TStringField;
    FDQPessoasenha: TStringField;
    FDQPessoaimg_usuario: TBlobField;
    FDQProduto: TFDQuery;
    FDQProdutoid: TFDAutoIncField;
    FDQProdutonome: TStringField;
    FDQProdutodescricao: TStringField;
    FDQProdutovalor: TBCDField;
    FDQProdutoquantidade: TIntegerField;
    FDQProdutoimg_produto: TBlobField;
    FDQProdutofavorito: TStringField;
    FDQFavoritos: TFDQuery;
    FDAutoIncField1: TFDAutoIncField;
    StringField1: TStringField;
    StringField2: TStringField;
    BCDField1: TBCDField;
    IntegerField1: TIntegerField;
    BlobField1: TBlobField;
    StringField3: TStringField;
    FDQListaFavoritos: TFDQuery;
    FDQListaFavoritosid: TFDAutoIncField;
    FDQListaFavoritosnome: TStringField;
    FDQListaFavoritosdescricao: TStringField;
    FDQListaFavoritosvalor: TBCDField;
    FDQListaFavoritosquantidade: TIntegerField;
    FDQListaFavoritosimg_produto: TBlobField;
    FDQListaFavoritosfavorito: TStringField;
    FDQPedido: TFDQuery;
    FDQitemPedido: TFDQuery;
    procedure FDConnection1AfterConnect(Sender: TObject);
    procedure FDConnection1BeforeConnect(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  DM: TDM;

implementation

{%CLASSGROUP 'FMX.Controls.TControl'}
{$R *.dfm}

procedure TDM.FDConnection1AfterConnect(Sender: TObject);
var
  strSQL: string;
begin
  strSQL := 'create table IF NOT EXISTS pessoa( 		' + //
            'id integer not null primary key autoincrement, ' + //
            'nome varchar(40),                              ' + //
            'cpf varchar(11),                               ' + //
            'celular varchar(13),                           ' + //
            'cep varchar(10),                               ' + //
            'endereco varchar(60),                          ' + //
            'cidade varchar(60),                            ' + //
            'uf char(2),                                    ' + //
            'bairro varchar(60),                            ' + //
            'email varchar(60),                             ' + //
            'senha varchar(40),                             ' + //
            'img_usuario blob)) ';
  FDConnection1.ExecSQL(strSQL);

  strSQL := EmptyStr;
  strSQL := ' create table IF NOT EXISTS produto( ' + //
            ' id integer not null primary key autoincrement, ' + //
            ' nome varchar(20), '+ //
            ' descricao varchar(200), '+//
            ' valor numeric(14,2), '+   //
            ' quantidade integer, '+   //
            ' img_produto blob), '+     //
            ' favorito char(1)) ';   //

    FDConnection1.ExecSQL(strSQL);

    strSQL := EmptyStr;
    strSQL := ' create table IF NOT EXISTS pedido( ' + //
            ' id integer not null primary key autoincrement, ' + //
            ' idPessoa integer, '+ //
            ' datahora DATETIME, '+//
            ' vlrpedido numeric(8,2), '+   //
            ' statusPedido char(1), '+   //
            ' foreign key (idPessoa) references pessoa(id)) ';  //

    FDConnection1.ExecSQL(strSQL);

    strSQL := EmptyStr;
    strSQL := ' create table IF NOT EXISTS itemPedido( ' + //
            ' id integer not null primary key autoincrement, ' + //
            ' idPedido integer, '+ //
            ' idProduto integer, '+//
            ' qteProduto integer, '+ //
            ' vlrItem numeric(8,2), '+ //
            ' foreign key (idPedido) references pedido (id) ' + //
            ' foreign key (idProduto) references produto (id)) '; //

    FDConnection1.ExecSQL(strSQL);


  FDQPessoa.Active := true;
  FDQProduto.Active := true;
  FDQFavoritos.Active :=true;
  FDQPedido.Active :=true;
  FDQitemPedido.Active :=true;
  FDQListaFavoritos.Active :=true;
end;

procedure TDM.FDConnection1BeforeConnect(Sender: TObject);
var
  strPath: string;
begin
{$IF DEFINED(iOS) or DEFINED(ANDROID)}
  strPath := System.IOUtils.TPath.Combine(System.IOUtils.TPath.GetDocumentsPath,
    'BD.db');
{$ENDIF}
{$IFDEF MSWINDOWS}
  strPath := System.IOUtils.TPath.Combine
    ('C:\Users\gusta\Downloads\aula2209\Aula2\BD',
    'BD.db');
{$ENDIF}
  FDConnection1.Params.Values['UseUnicode'] := 'False';
  FDConnection1.Params.Values['DATABASE'] := strPath;
end;

end.
